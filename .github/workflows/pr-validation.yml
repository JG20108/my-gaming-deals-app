name: PR Validation

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  validate:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type checking
        run: npx tsc --noEmit

      - name: Run ESLint
        run: npm run lint
        continue-on-error: false

      - name: Check for unused imports/variables
        run: npx tsc --noEmit --noUnusedLocals --noUnusedParameters

      - name: Build application
        run: npm run build

      - name: Run tests (if available)
        run: npm test -- --coverage --watchAll=false
        continue-on-error: true

      - name: Check bundle size
        run: |
          npm run build
          du -sh dist/
          echo "Bundle size check completed"

      - name: Validate package.json
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Check for console.log statements
        run: |
          echo "Checking for console.log statements..."
          if grep -r "console\.log" src/ --exclude-dir=node_modules; then
            echo "‚ùå Found console.log statements in source code"
            exit 1
          else
            echo "‚úÖ No console.log statements found"
          fi

      - name: Check for TODO/FIXME comments
        run: |
          echo "Checking for TODO/FIXME comments..."
          TODO_COUNT=$(grep -r "TODO\|FIXME" src/ --exclude-dir=node_modules | wc -l || echo "0")
          if [ "$TODO_COUNT" -gt 0 ]; then
            echo "‚ö†Ô∏è Found $TODO_COUNT TODO/FIXME comments:"
            grep -r "TODO\|FIXME" src/ --exclude-dir=node_modules || true
          else
            echo "‚úÖ No TODO/FIXME comments found"
          fi

      - name: Validate imports
        run: |
          echo "Checking for unused imports..."
          # This will be caught by TypeScript, but let's be explicit
          npx tsc --noEmit --noUnusedLocals || echo "‚ö†Ô∏è Unused locals detected"

      - name: Check file naming conventions
        run: |
          echo "Checking file naming conventions..."
          # Check for PascalCase component files
          find src/components -name "*.tsx" -not -name "[A-Z]*" | while read file; do
            echo "‚ö†Ô∏è Component file should use PascalCase: $file"
          done

          # Check for camelCase utility files
          find src/utils -name "*.ts" -name "[A-Z]*" | while read file; do
            echo "‚ö†Ô∏è Utility file should use camelCase: $file"
          done

      - name: Performance check
        run: |
          echo "Running performance checks..."
          # Check for large files
          find src/ -name "*.ts" -o -name "*.tsx" | xargs wc -l | sort -nr | head -10
          echo "Largest source files listed above"

      - name: Code quality summary
        run: |
          echo "üéØ PR Validation Summary"
          echo "========================"
          echo "‚úÖ TypeScript compilation: PASSED"
          echo "‚úÖ Build process: PASSED" 
          echo "‚úÖ Code quality checks: PASSED"
          echo ""
          echo "üöÄ Ready for review!"

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for sensitive data
        run: |
          echo "Checking for potential sensitive data..."
          # Check for API keys, passwords, etc.
          if grep -r -i "api[_-]key\|password\|secret\|token" src/ --exclude-dir=node_modules --exclude="*.md"; then
            echo "‚ö†Ô∏è Potential sensitive data found - please review"
          else
            echo "‚úÖ No obvious sensitive data patterns found"
          fi
